// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using netcore.fcimiddleware.fondos.infrastructure.Persistence;

#nullable disable

namespace netcore.fcimiddleware.fondos.infrastructure.Migrations
{
    [DbContext(typeof(ApplicationWriteDbContext))]
    partial class ApplicationWriteDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.26")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("netcore.fcimiddleware.fondos.domain.AgColocador", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("CreatedBy")
                        .HasColumnType("text");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("IdCAFCI")
                        .HasColumnType("text");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsSincronized")
                        .HasColumnType("boolean");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("text");

                    b.Property<DateTime?>("LastModifiedDate")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.ToTable("AgColocadores", (string)null);
                });

            modelBuilder.Entity("netcore.fcimiddleware.fondos.domain.CondIngEgrFondo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("CreatedBy")
                        .HasColumnType("text");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("FondoId")
                        .HasColumnType("integer");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsSincronized")
                        .HasColumnType("boolean");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("text");

                    b.Property<DateTime?>("LastModifiedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("TpValorCptFondoId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("FondoId");

                    b.HasIndex("TpValorCptFondoId");

                    b.ToTable("CondIngEgrFondos", (string)null);
                });

            modelBuilder.Entity("netcore.fcimiddleware.fondos.domain.Fondo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("CreatedBy")
                        .HasColumnType("text");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("IdCAFCI")
                        .HasColumnType("text");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsSincronized")
                        .HasColumnType("boolean");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("text");

                    b.Property<DateTime?>("LastModifiedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("MonedaId")
                        .HasColumnType("integer");

                    b.Property<int>("PaisId")
                        .HasColumnType("integer");

                    b.Property<int>("SocDepositariaId")
                        .HasColumnType("integer");

                    b.Property<int>("SocGerenteId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("MonedaId");

                    b.HasIndex("PaisId");

                    b.HasIndex("SocDepositariaId");

                    b.HasIndex("SocGerenteId");

                    b.ToTable("Fondos", (string)null);
                });

            modelBuilder.Entity("netcore.fcimiddleware.fondos.domain.Moneda", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("CreatedBy")
                        .HasColumnType("text");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("IdCAFCI")
                        .HasColumnType("text");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsSincronized")
                        .HasColumnType("boolean");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("text");

                    b.Property<DateTime?>("LastModifiedDate")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.ToTable("Monedas", (string)null);
                });

            modelBuilder.Entity("netcore.fcimiddleware.fondos.domain.Pais", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("CreatedBy")
                        .HasColumnType("text");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("IdCAFCI")
                        .HasColumnType("text");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsSincronized")
                        .HasColumnType("boolean");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("text");

                    b.Property<DateTime?>("LastModifiedDate")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.ToTable("Paises", (string)null);
                });

            modelBuilder.Entity("netcore.fcimiddleware.fondos.domain.SocDepositaria", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("CreatedBy")
                        .HasColumnType("text");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("IdCAFCI")
                        .HasColumnType("text");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsSincronized")
                        .HasColumnType("boolean");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("text");

                    b.Property<DateTime?>("LastModifiedDate")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.ToTable("SocDepositarias", (string)null);
                });

            modelBuilder.Entity("netcore.fcimiddleware.fondos.domain.SocGerente", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("CreatedBy")
                        .HasColumnType("text");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("IdCAFCI")
                        .HasColumnType("text");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsSincronized")
                        .HasColumnType("boolean");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("text");

                    b.Property<DateTime?>("LastModifiedDate")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.ToTable("SocGerentes", (string)null);
                });

            modelBuilder.Entity("netcore.fcimiddleware.fondos.domain.TpValorCptFondo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("CreatedBy")
                        .HasColumnType("text");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("FondoId")
                        .HasColumnType("integer");

                    b.Property<string>("IdCAFCI")
                        .HasColumnType("text");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsSincronized")
                        .HasColumnType("boolean");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("text");

                    b.Property<DateTime?>("LastModifiedDate")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.HasIndex("FondoId");

                    b.ToTable("TpValorCptFondos", (string)null);
                });

            modelBuilder.Entity("netcore.fcimiddleware.fondos.domain.CondIngEgrFondo", b =>
                {
                    b.HasOne("netcore.fcimiddleware.fondos.domain.Fondo", "Fondos")
                        .WithMany()
                        .HasForeignKey("FondoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("netcore.fcimiddleware.fondos.domain.TpValorCptFondo", "TpValorCptFondo")
                        .WithMany("CondIngEgrFondos")
                        .HasForeignKey("TpValorCptFondoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Fondos");

                    b.Navigation("TpValorCptFondo");
                });

            modelBuilder.Entity("netcore.fcimiddleware.fondos.domain.Fondo", b =>
                {
                    b.HasOne("netcore.fcimiddleware.fondos.domain.Moneda", "Monedas")
                        .WithMany("Fondos")
                        .HasForeignKey("MonedaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("netcore.fcimiddleware.fondos.domain.Pais", "Paises")
                        .WithMany("Fondos")
                        .HasForeignKey("PaisId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("netcore.fcimiddleware.fondos.domain.SocDepositaria", "SocDepositarias")
                        .WithMany("Fondos")
                        .HasForeignKey("SocDepositariaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("netcore.fcimiddleware.fondos.domain.SocGerente", "SocGerentes")
                        .WithMany("Fondos")
                        .HasForeignKey("SocGerenteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Monedas");

                    b.Navigation("Paises");

                    b.Navigation("SocDepositarias");

                    b.Navigation("SocGerentes");
                });

            modelBuilder.Entity("netcore.fcimiddleware.fondos.domain.TpValorCptFondo", b =>
                {
                    b.HasOne("netcore.fcimiddleware.fondos.domain.Fondo", "Fondos")
                        .WithMany("TpValorCptFondos")
                        .HasForeignKey("FondoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Fondos");
                });

            modelBuilder.Entity("netcore.fcimiddleware.fondos.domain.Fondo", b =>
                {
                    b.Navigation("TpValorCptFondos");
                });

            modelBuilder.Entity("netcore.fcimiddleware.fondos.domain.Moneda", b =>
                {
                    b.Navigation("Fondos");
                });

            modelBuilder.Entity("netcore.fcimiddleware.fondos.domain.Pais", b =>
                {
                    b.Navigation("Fondos");
                });

            modelBuilder.Entity("netcore.fcimiddleware.fondos.domain.SocDepositaria", b =>
                {
                    b.Navigation("Fondos");
                });

            modelBuilder.Entity("netcore.fcimiddleware.fondos.domain.SocGerente", b =>
                {
                    b.Navigation("Fondos");
                });

            modelBuilder.Entity("netcore.fcimiddleware.fondos.domain.TpValorCptFondo", b =>
                {
                    b.Navigation("CondIngEgrFondos");
                });
#pragma warning restore 612, 618
        }
    }
}
